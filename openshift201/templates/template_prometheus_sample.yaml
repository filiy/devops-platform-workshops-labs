apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: prometheus-template
message: |-
  The following service(s) have been created in your project: ${PROMETHEUS_SERVICE_NAME}.
  For more information about using this template, including OpenShift considerations, contact the rocketchat community.
metadata:
  annotations:
    description: |-
      Prometheus Template for use in OpenShift 201 lab. 
      WARNING: Any configuration stored will be lost upon pod destruction. ConfigMaps should be used for codified configuration. 
    iconClass: icon-other-unknown
    openshift.io/display-name: prometheus-openshift201
    openshift.io/documentation-url: https://github.com/bcdevops/devops-platform-workshops
    openshift.io/long-description: This template provides a sample prometheus configuration for lab purposes.
    openshift.io/provider-display-name: BCDevOps
    openshift.io/support-url: https://github.com/bcdevops/
    tags: monitoring,prometheus
  name: prometheus-template
objects: 
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: ${PROMETHEUS_SERVICE_NAME}
    name: ${PROMETHEUS_SERVICE_NAME}
  data:
    alerts: |
      {}
      
    prometheus.yml: |
      global:
        evaluation_interval: 1m
        scrape_interval: 1m
        scrape_timeout: 10s
      rule_files:
      - /etc/config/rules
      - /etc/config/alerts
      scrape_configs:
      - job_name: prometheus
        static_configs:
        - targets:
          - localhost:9090
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
        - role: pod
          namespaces:
              names:
                - ${NAMESPACE}
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_scrape
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_pod_annotation_prometheus_io_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: kubernetes_pod_name
      
    rules: |
      {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${PROMETHEUS_SERVICE_NAME}
    name: ${PROMETHEUS_SERVICE_NAME}
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: ${PROMETHEUS_PVC_SIZE}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${PROMETHEUS_SERVICE_NAME}
    name: ${PROMETHEUS_SERVICE_NAME}
  spec:
    ports:
      - name: http
        port: 80
        protocol: TCP
        targetPort: 9090
    selector:
      app: ${PROMETHEUS_SERVICE_NAME}
    type: "ClusterIP"
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: ${PROMETHEUS_SERVICE_NAME}
    name: ${PROMETHEUS_SERVICE_NAME}
  spec:
    selector:
      matchLabels:
        app: ${PROMETHEUS_SERVICE_NAME}
    replicas: 1
    template:
      metadata:
        labels:
          app: ${PROMETHEUS_SERVICE_NAME}
      spec:
        serviceAccountName: default
        # initContainers:
        # - name: "init-chown-data"
        #   image: "busybox:latest"
        #   imagePullPolicy: "IfNotPresent"
        #   resources:
        #       {}
              
        #   # 65534 is the nobody user that prometheus uses.
        #   command: ["chown", "-R", "65534:65534", "/data"]
        #   volumeMounts:
        #   - name: storage-volume
        #     mountPath: /data
        #     subPath: ""
        containers:
          - name: prometheus-configmap-reload
            image: "jimmidyson/configmap-reload:v0.2.2"
            imagePullPolicy: "IfNotPresent"
            args:
              - --volume-dir=/etc/config
              - --webhook-url=http://127.0.0.1:9090/-/reload
            resources:
              {}
            volumeMounts:
              - name: config-volume
                mountPath: /etc/config
                readOnly: true
          - name: prometheus-stewartshea-prometheus
            image: "prom/prometheus:v2.9.2"
            imagePullPolicy: "IfNotPresent"
            args:
              - --config.file=/etc/config/prometheus.yml
              - --storage.tsdb.path=/data
              - --web.console.libraries=/etc/prometheus/console_libraries
              - --web.console.templates=/etc/prometheus/consoles
              - --web.enable-lifecycle
            ports:
              - containerPort: 9090
            readinessProbe:
              httpGet:
                path: /-/ready
                port: 9090
              initialDelaySeconds: 30
              timeoutSeconds: 30
            livenessProbe:
              httpGet:
                path: /-/healthy
                port: 9090
              initialDelaySeconds: 30
              timeoutSeconds: 30
            resources:
              {}
            volumeMounts:
              - name: config-volume
                mountPath: /etc/config
              - name: storage-volume
                mountPath: /data
                subPath: ""
        terminationGracePeriodSeconds: 300
        volumes:
          - name: config-volume
            configMap:
              name: ${PROMETHEUS_SERVICE_NAME}
          - name: storage-volume
            persistentVolumeClaim:
              claimName: ${PROMETHEUS_SERVICE_NAME}
parameters:
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: The namespace this templated is deployed into.
  displayName: Namespace
  name: NAMESPACE
  value: openshift
- description: The name of the OpenShift Service exposed.
  displayName: Prometheus Service Name
  name: PROMETHEUS_SERVICE_NAME
  required: true
  value: prometheus
- description: The size of the prometheus pvc
  displayName: Prometheus pvc size
  name: PROMETHEUS_PVC_SIZE
  required: true
  value: 1Gi